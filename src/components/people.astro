---
import people from "../data/people.json";
import {A} from "./elements";

type Org = {
    name: string;
    people: Person[];
}
type Person = {
    "name": string;
    "title": string;
    "photo": string;
    "profile-url": string;
    "affiliations": Array<{ name: string; role: string }>
    "elixir-groups": Array<{ name: string; role: string }>
}

const {
    elixirGroup,
    org,
    hidePicture,
    layout = "default",
    hideOrg,
    isSummary = false
} = Astro.props;

function composeTitle(person: Person) {
    return [
        person.title,
        ...person["elixir-groups"].map(g => g.role).filter(Boolean),
        ...person["affiliations"].map(a => {
            if (a) return `${a?.role ? a.role + "â€”" : ''}${a.name}`;
        }),
    ]
        .filter(Boolean)
        .join(", ")
}

function getAllPeopleWithMetadata(data: { groups: any, orgs: { [key: string]: Org } }) {
    let allPeople = [];
    for (const [orgKey, org] of Object.entries(data.orgs)) {
        org.people.forEach(person => {
            const personWithMetadata = {
                ...person,
                "org-key": orgKey,
                "org-name": (org as Org).name,
                "full-title": composeTitle(person)
            };
            allPeople.push(personWithMetadata);
        });
    }
    return allPeople;
}

const sub = x => x?.name === elixirGroup;
const peopleWithMeta = getAllPeopleWithMetadata(people);
const filteredPeople = peopleWithMeta
    .filter(o => !org ? true : o["org-key"] === org)
    .filter(o => !elixirGroup ? true : o["elixir-groups"]?.find(sub));
---

<Fragment>
    {isSummary ? (
            <div class="text-center">
                <A href="/about/everyone">70 amazing souls collaborate at Elixir Norway. See them all here.</A>.
            </div>
        ) : (
        <ul class={`grid gap-y-4 gap-x-4 place-content-center ${layout === "two-col" ? "grid-cols-2" : "grid-cols-1"}`}>
            {filteredPeople.map((person) => {
                return (
                        <li class="col-span-full md:col-span-1 w-full">
                            <a href={person["profile-url"]}
                               target="_blank"
                               rel="noopener noreferrer"
                               class={`w-full h-full flex items-start justify-start gap-x-2`}
                            >
                                {!hidePicture && (
                                        <div class="mt-1 mr-2 flex-shrink-0 w-14 h-14 rounded-full overflow-hidden">
                                            <img alt={person.name}
                                                 src={person.photo}
                                                 class="object-cover aspect-square"/>
                                        </div>
                                )}
                                <div class="flex-1">
                                    <div class="text-base font-semibold">
                                        {person.name}
                                    </div>
                                    <div class="flex flex-col gap-y-1 text-slate-700 dark:text-slate-200">
                                        <div class="text-xs flex-1">{person["full-title"]}</div>
                                        {
                                            !hideOrg && (
                                                        <div class="text-xs text-slate-600 dark:text-slate-300">
                                                            {person["org-name"]}
                                                        </div>
                                            )
                                        }
                                    </div>
                                </div>
                            </a>

                        </li>
                )
            })}
        </ul>
        )}
        </Fragment>

