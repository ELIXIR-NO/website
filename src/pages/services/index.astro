---
import { type CollectionEntry, getCollection } from 'astro:content';
import { Debug } from "astro/components";
import { components } from "../../components/elements";
import Layout from "../../layouts/complex.astro";
import { P } from "../../components/elements";
import LeftSidebar from "../../content/training/_left.mdx";

const services = await getCollection('services');

const x = [];
services.forEach((s) => {
    x.push(...(s.data?.tags ?? []));
});
const toTitle = (slug: string) => slug.toLowerCase().split(/[-_.\s]/).map((w) => `${w.charAt(0).toUpperCase()}${w.substr(1)}`).join(' ');
function pushAllLengthiestToLast(arr) {
    if (arr.length === 0) return arr; // Return if the array is empty
    // Find the maximum length of strings in the array
    let maxLength = Math.max(...arr.map(str => str.length));
    // Separate the strings with maximum length from the rest of the array
    let maxLengthStrings = [];
    let remainingStrings = [];
    for (let str of arr) {
        if (str.length === maxLength) {
            maxLengthStrings.push(str);
        } else {
            remainingStrings.push(str);
        }
    }
    // Concatenate remaining strings with the maxLength strings at the end
    return remainingStrings.concat(maxLengthStrings);
}
let tags = pushAllLengthiestToLast([...(new Set(x))]);
tags = tags.map(t => {
    return ({
        value: t,
        label: toTitle(t),
        checked: false
    })
})
console.log(tags);
---

<Layout title="Services" sidebar="equal">

    <div slot="left">
        <div>
            <h2 class="text-xl font-bold">Refine your search</h2>
        </div>
        <form class="mt-6 flex flex-wrap gap-y-1 gap-x-1">
            {tags.map((t, id) =>
                    <div class="items-center rounded-full border border-gray-300 bg-white text-sm font-medium text-gray-900">
                        <input
                                id={`filter-${id}`}
                                name={`tag`}
                                type="checkbox"
                                class="hidden h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"
                        />
                        <label
                                class="w-full h-full py-1 pl-3 pr-2 inline-flex flex-shrink-0 rounded-full p-1 text-gray-400 hover:bg-gray-200 hover:text-gray-500 cursor-pointer"
                        >
                            {t.label}
                        </label>
                    </div>
            )}
        </form>
    </div>

    <P>ELIXIR Norway offers services and infrastructure for life science, including software tools and workflows,
        databases and storage. In addition ELIXIR Norway provides support through its national helpdesk and offers
        trainings. Moreover, ELIXIR Norway provides services to the international research community.</P>
    <div class="overflow-hidden rounded-md border border-gray-300 bg-white mt-8">
        <ul role="list" class="divide-y divide-gray-300">
            {services.map((service) => (
                    <li class="relative px-6 py-4 flex">
                        <a href={`/services/${service.slug}`}>
                            <span class="z-10 w-2/3">
                                <h1 class="font-bold text-2xl">
                                    {service.data.title}
                                </h1>
                                <p class="font-light text-xs leading-relaxed w-2/3">
                                    {service.data.summary}
                                </p>
                            </span>
                            <span class="w-1/3 absolute top-0 right-0 h-full transform origin-top-right skew-x-12 ">
                                <img src="/images/placeholders/generic.png"
                                     class="w-full h-full overflow-hidden object-cover"
                                     alt="Cover image"/>
                            </span>
                        </a>
                    </li>
            ))}
        </ul>
    </div>
</Layout>

