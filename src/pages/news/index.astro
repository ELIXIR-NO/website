---
import { getCollection } from 'astro:content';
import FullWidthLayout from "../../layouts/full-width.astro";
import CardV2 from "../../components/card.v2";

// Function to normalize the date
function parseDate(dateString: string): number {
    // Try to create a date using the Date constructor
    const parsedDate = new Date(Date.parse(dateString));
    // If the date is invalid, return a default timestamp (0 represents the epoch)
    if (isNaN(parsedDate.getTime())) {
        return new Date(0).getTime(); // Return the default date's timestamp
    }
    return parsedDate.getTime(); // Return the timestamp of the parsed date
}

function truncateStringToLength(string: string, length: number) {
    return (string.length > length)
        ? `${string.substring(0, length).trim()}...`
        : string
}

const news = await getCollection('news');
news.sort((a, b) => parseDate(b.data.date) - parseDate(a.data.date));
---

<FullWidthLayout title="News">
    <ol class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-y-12 gap-x-12">
        {news.map((entry) => {
            return (
                    <CardV2
                            link={`/news/${entry.slug}`}
                            title={entry.data.title}
                            summary={entry.data.summary}
                            cover={entry.data?.cover?.source}
                            date={entry.data.date}
                    />
            )
        })}
    </ol>
</FullWidthLayout>
